{"version":3,"sources":["main.js","bug.ext.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","$","click","this","text","closest","find","toggle","document","querySelector","addEventListener","MaterialProgress","setProgress","setBuffer","showPlayButton","removeClass","setTimeout","BugDispatch","options","minDelay","maxDelay","minBugs","maxBugs","minSpeed","maxSpeed","maxLargeTurnDeg","maxSmallTurnDeg","maxWiggleDeg","imageSprite","bugWidth","bugHeight","num_frames","zoom","canFly","canDie","numDeathTypes","monitorMouseMovement","eventDistanceToBug","minTimeBetweenMultipy","mouseOver","initialize","mergeOptions","modes","push","indexOf","transform","transforms","Moz","s","bug","style","MozTransform","webkit","webkitTransform","O","OTransform","ms","msTransform","Khtml","KhtmlTransform","w3c","documentElement","vendors","i","length","bugs","numBugs","random","that","JSON","parse","stringify","b","SpawnBug","wingsOpen","Math","walkSpeed","spawnDelay","delay","thebug","flyIn","walkIn","add_events_to_bug","onmousemove","check_if_mouse_close_to_bug","stop","clearTimeout","end","remove","reset","killAll","die","on_bug","attachEvent","event","posx","posy","client","x","y","clientX","clientY","page","body","scrollLeft","scrollTop","pageX","pageY","pos","getPos","abs","top","left","flyperiodical","near_bug","alive","mode","flyRand","flyOff","multiplyDelay","drawBug","go","min","max","round","result","BugController","apply","arguments","prototype","SpiderController","spiderOptions","Bug","flySpeed","edge_resistance","NEAR_TOP_EDGE","NEAR_BOTTOM_EDGE","NEAR_LEFT_EDGE","NEAR_RIGHT_EDGE","directions","angle_deg","angle_rad","large_turn_angle_deg","near_edge","edge_test_counter","small_turn_counter","large_turn_counter","fly_counter","toggle_stationary_counter","stationary","active","walkIndex","flyIndex","twitchTimer","rad2deg_k","PI","deg2rad_k","makeBug","deg2rad","animating","going","requestAnimFrame","t","animate","inserted","parentNode","removeChild","bottom","_lastTimestamp","delta","toggleStationary","bug_near_window_edge","angle1","angle2","next_large_turn","next_small_turn","dangle","dx","cos","dy","sin","moveBug","walkFrame","row","createElement","className","background","width","height","position","zIndex","setPos","clientHeight","clientWidth","deg","trans","parseInt","appendChild","next_stationary","ypos","backgroundPosition","xpos","fly","landingPosition","currentTop","currentLeft","diffx","diffy","angle","atan","startFlying","rad2deg","setInterval","side","d","g","getElementsByTagName","windowX","innerWidth","windowY","innerHeight","deathType","drop","startPos","finalPos","rotationRate","Date","now","dropTimer","dropping","elapsedTime","deltaPos","newPos","rotationOffset","zoomOffset","ceil","twitch","legPos","rad","plusminus","prop","newBug","hasOwnProperty","obj1","obj2","clone","newobj","cloneOf","key","obj","temp","constructor","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","element"],"mappings":"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","file":"main.min.js","sourcesContent":["/*!\r\n *\r\n *  Web Starter Kit\r\n *  Copyright 2015 Google Inc. All rights reserved.\r\n *\r\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\r\n *  you may not use this file except in compliance with the License.\r\n *  You may obtain a copy of the License at\r\n *\r\n *    https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n *  Unless required by applicable law or agreed to in writing, software\r\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\r\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n *  See the License for the specific language governing permissions and\r\n *  limitations under the License\r\n *\r\n */\r\n/* eslint-env browser */\r\n/* eslint linebreak-style: [1, \"windows\"] */\r\n(function() {\r\n  'use strict';\r\n\r\n  // Check to make sure service workers are supported in the current browser,\r\n  // and that the current page is accessed from a secure origin. Using a\r\n  // service worker from an insecure origin will trigger JS console errors. See\r\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\r\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n  );\r\n\r\n  if ('serviceWorker' in navigator &&\r\n    (window.location.protocol === 'https:' || isLocalhost)) {\r\n    navigator.serviceWorker.register('service-worker.js')\r\n      .then(function(registration) {\r\n        // updatefound is fired if service-worker.js changes.\r\n        registration.onupdatefound = function() {\r\n          // updatefound is also fired the very first time the SW is installed,\r\n          // and there's no need to prompt for a reload at that point.\r\n          // So check here to see if the page is already controlled,\r\n          // i.e. whether there's an existing service worker.\r\n          if (navigator.serviceWorker.controller) {\r\n            // The updatefound event implies that registration.installing is set:\r\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\r\n            var installingWorker = registration.installing;\r\n\r\n            installingWorker.onstatechange = function() {\r\n              switch (installingWorker.state) {\r\n                case 'installed':\r\n                  // At this point, the old content will have been purged and the\r\n                  // fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in the page's interface.\r\n                  break;\r\n\r\n                case 'redundant':\r\n                  throw new Error('The installing ' +\r\n                    'service worker became redundant.');\r\n\r\n                default:\r\n                // Ignore\r\n              }\r\n            };\r\n          }\r\n        };\r\n      }).catch(function(e) {\r\n        console.error('Error during service worker registration:', e);\r\n      });\r\n  }\r\n\r\n  // Your custom JavaScript goes here\r\n  /* eslint-env jquery */\r\n  $('.button--read-more').click(function() {\r\n    $(this).text($(this).text() === 'Read more' ? 'Hide' : 'Read more');\r\n    $(this).closest('.mdl-card').find('.hidden-text').toggle('fast');\r\n  });\r\n  document.querySelector('#spanish-bar')\r\n    .addEventListener('mdl-componentupgraded', function() {\r\n      this.MaterialProgress.setProgress(100);\r\n    });\r\n  document.querySelector('#english-bar')\r\n    .addEventListener('mdl-componentupgraded', function() {\r\n      this.MaterialProgress.setProgress(99);\r\n    });\r\n  document.querySelector('#polish-bar')\r\n    .addEventListener('mdl-componentupgraded', function() {\r\n      this.MaterialProgress.setProgress(55);\r\n      this.MaterialProgress.setBuffer(60);\r\n    });\r\n  document.querySelector('#german-bar')\r\n    .addEventListener('mdl-componentupgraded', function() {\r\n      this.MaterialProgress.setProgress(30);\r\n    });\r\n\r\n  var showPlayButton = function() {\r\n    $('#add').removeClass('hidden');\r\n  };\r\n\r\n  setTimeout(showPlayButton, 30000);\r\n\r\n /*  $(document).ready(function() {\r\n    console.log('Document ready!');\r\n    $('.mdl-layout__content').on('swiperight', function() {\r\n      console.log('Swipe right detected!');\r\n    });\r\n    $('.mdl-layout__content').on('swipeleft', function() {\r\n      console.log('Swipe left detected!');\r\n    });\r\n  }); */\r\n})();\r\n","// ==ClosureCompiler==\r\n// @compilation_level SIMPLE_OPTIMIZATIONS\r\n// @output_file_name bug-min.js\r\n// ==/ClosureCompiler==\r\n/**\r\n * @preserve Bug.js - https://github.com/Auz/Bug\r\n * Released under MIT-style license.\r\n * Original Screen Bug http://screen-bug.googlecode.com/git/index.html\r\n */\r\n/**\r\n * Bug.js - Add bugs to your page\r\n *\r\n * https://github.com/Auz/Bug\r\n *\r\n * license: MIT-style license.\r\n * copyright: Copyright (c) 2016 Graham McNicoll\r\n *\r\n *\r\n * Created for an aprils fool joke at Education.com 2013. I knew there was probably a script\r\n * that did it already, and there was: http://screen-bug.googlecode.com/git/index.html.\r\n * I used this as the starting point and heavily modified it, used sprite image animation,\r\n * and added many new features.\r\n *\r\n *\r\n * Original Screen Bug http://screen-bug.googlecode.com/git/index.html\r\n * Copyright ©2011 Kernc (kerncece ^_^ gmail)\r\n * Released under WTFPL license.\r\n *\r\n */\r\n\"use strict\";\r\n\r\n\r\nvar BugDispatch = {\r\n\r\n    options: {\r\n        minDelay: 500,\r\n        maxDelay: 10000,\r\n        minBugs: 1,\r\n        maxBugs: 1,\r\n        minSpeed: 5,\r\n        maxSpeed: 10,\r\n        maxLargeTurnDeg: 150,\r\n        maxSmallTurnDeg: 10,\r\n        maxWiggleDeg: 5,\r\n        imageSprite: 'images/fly-sprite.png',\r\n        bugWidth: 13,\r\n        bugHeight: 14,\r\n        num_frames: 5,\r\n        zoom: 10, // random zoom variation from 1 to 10 - 10 being full size.\r\n        canFly: true,\r\n        canDie: true,\r\n        numDeathTypes: 3,\r\n        monitorMouseMovement: false,\r\n        eventDistanceToBug: 40,\r\n        minTimeBetweenMultipy: 1000,\r\n        mouseOver: 'die' // can be 'fly', 'flyoff' (if the bug can fly), die', 'multiply', 'nothing' or 'random'\r\n    },\r\n\r\n    initialize: function(options) {\r\n\r\n        this.options = mergeOptions(this.options, options);\r\n\r\n        // sanity check:\r\n        if (this.options.minBugs > this.options.maxBugs) {\r\n            this.options.minBugs = this.options.maxBugs;\r\n        }\r\n\r\n        this.modes = ['multiply', 'nothing'];\r\n\r\n        if (this.options.canFly) {\r\n            this.modes.push('fly', 'flyoff');\r\n        }\r\n        if (this.options.canDie) {\r\n            this.modes.push('die');\r\n        }\r\n\r\n        if (this.modes.indexOf(this.options.mouseOver) == -1) {\r\n            // invalid mode: use random:\r\n            this.options.mouseOver = 'random';\r\n        }\r\n\r\n        // can we transform?\r\n        this.transform = null;\r\n\r\n        this.transforms = {\r\n            'Moz': function(s) {\r\n                this.bug.style.MozTransform = s;\r\n            },\r\n            'webkit': function(s) {\r\n                this.bug.style.webkitTransform = s;\r\n            },\r\n            'O': function(s) {\r\n                this.bug.style.OTransform = s;\r\n            },\r\n            'ms': function(s) {\r\n                this.bug.style.msTransform = s;\r\n            },\r\n            'Khtml': function(s) {\r\n                this.bug.style.KhtmlTransform = s;\r\n            },\r\n            'w3c': function(s) {\r\n                this.bug.style.transform = s;\r\n            }\r\n        };\r\n\r\n\r\n        // check to see if it is a modern browser:\r\n\r\n        if ('transform' in document.documentElement.style) {\r\n            this.transform = this.transforms.w3c;\r\n        } else {\r\n\r\n            // feature detection for the other transforms:\r\n            var vendors = ['Moz', 'webkit', 'O', 'ms', 'Khtml'],\r\n                i = 0;\r\n\r\n            for (i = 0; i < vendors.length; i++) {\r\n                if (vendors[i] + 'Transform' in document.documentElement.style) {\r\n                    this.transform = this.transforms[vendors[i]];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        // dont support transforms... quit\r\n        if (!this.transform) return;\r\n\r\n        // make bugs:\r\n        this.bugs = [];\r\n        var numBugs = (this.options.mouseOver === 'multiply') ? this.options.minBugs : this.random(this.options.minBugs, this.options.maxBugs, true),\r\n            i = 0,\r\n            that = this;\r\n\r\n        for (i = 0; i < numBugs; i++) {\r\n            var options = JSON.parse(JSON.stringify(this.options)),\r\n                b = SpawnBug();\r\n\r\n            options.wingsOpen = (this.options.canFly) ? ((Math.random() > 0.5) ? true : false) : true,\r\n                options.walkSpeed = this.random(this.options.minSpeed, this.options.maxSpeed),\r\n\r\n                b.initialize(this.transform, options);\r\n            this.bugs.push(b);\r\n        }\r\n\r\n        // fly them in staggered:\r\n        this.spawnDelay = [];\r\n        for (i = 0; i < numBugs; i++) {\r\n            var delay = this.random(this.options.minDelay, this.options.maxDelay, true),\r\n                thebug = this.bugs[i];\r\n            // fly the bug onto the page:\r\n            this.spawnDelay[i] = setTimeout((function(thebug) {\r\n                return function() {\r\n                    if (that.options.canFly) {\r\n                        thebug.flyIn();\r\n                    } else {\r\n                        thebug.walkIn();\r\n                    }\r\n\r\n                };\r\n            }(thebug)), delay);\r\n\r\n            // add mouse over events:\r\n            that.add_events_to_bug(thebug);\r\n        }\r\n\r\n        // add window event if required:\r\n        if (this.options.monitorMouseMovement) {\r\n            window.onmousemove = function() {\r\n                that.check_if_mouse_close_to_bug();\r\n            };\r\n        }\r\n\r\n    },\r\n\r\n    stop: function() {\r\n        for (var i = 0; i < this.bugs.length; i++) {\r\n            if(this.spawnDelay[i]) clearTimeout(this.spawnDelay[i]);\r\n            this.bugs[i].stop();\r\n        }\r\n    },\r\n\r\n    end: function() {\r\n        for (var i = 0; i < this.bugs.length; i++) {\r\n        \tif(this.spawnDelay[i]) clearTimeout(this.spawnDelay[i]);\r\n            this.bugs[i].stop();\r\n            this.bugs[i].remove();\r\n        }\r\n    },\r\n\r\n    reset: function() {\r\n        this.stop();\r\n        for (var i = 0; i < this.bugs.length; i++) {\r\n            this.bugs[i].reset();\r\n            this.bugs[i].walkIn();\r\n        }\r\n    },\r\n\r\n    killAll: function() {\r\n        for (var i = 0; i < this.bugs.length; i++) {\r\n        \tif(this.spawnDelay[i]) clearTimeout(this.spawnDelay[i]);\r\n            this.bugs[i].die();\r\n        }\r\n    },\r\n\r\n    add_events_to_bug: function(thebug) {\r\n        var that = this;\r\n        if (thebug.bug) {\r\n            if (thebug.bug.addEventListener) {\r\n                thebug.bug.addEventListener('mouseover', function(e) {\r\n                    that.on_bug(thebug);\r\n                });\r\n            } else if (thebug.bug.attachEvent) {\r\n                thebug.bug.attachEvent('onmouseover', function(e) {\r\n                    that.on_bug(thebug);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    check_if_mouse_close_to_bug: function(e) {\r\n        e = e || window.event;\r\n        if (!e) {\r\n            return;\r\n        }\r\n\r\n        var posx = 0,\r\n            posy = 0;\r\n        if (e.client && e.client.x) {\r\n            posx = e.client.x;\r\n            posy = e.client.y;\r\n        } else if (e.clientX) {\r\n            posx = e.clientX;\r\n            posy = e.clientY;\r\n        } else if (e.page && e.page.x) {\r\n            posx = e.page.x - (document.body.scrollLeft + document.documentElement.scrollLeft);\r\n            posy = e.page.y - (document.body.scrollTop + document.documentElement.scrollTop);\r\n        } else if (e.pageX) {\r\n            posx = e.pageX - (document.body.scrollLeft + document.documentElement.scrollLeft);\r\n            posy = e.pageY - (document.body.scrollTop + document.documentElement.scrollTop);\r\n        }\r\n        var numBugs = this.bugs.length,\r\n            i = 0;\r\n        for (i = 0; i < numBugs; i++) {\r\n            var pos = this.bugs[i].getPos();\r\n            if (pos) {\r\n                if (Math.abs(pos.top - posy) + Math.abs(pos.left - posx) < this.options.eventDistanceToBug && !this.bugs[i].flyperiodical) {\r\n                    this.near_bug(this.bugs[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    near_bug: function(bug) {\r\n        this.on_bug(bug);\r\n    },\r\n\r\n    on_bug: function(bug) {\r\n        if (!bug.alive) {\r\n            return;\r\n        }\r\n\r\n        var mode = this.options.mouseOver;\r\n\r\n        if (mode === 'random') {\r\n            mode = this.modes[(this.random(0, (this.modes.length - 1), true))];\r\n        }\r\n\r\n        if (mode === 'fly') {\r\n            // fly away!\r\n            bug.stop();\r\n            bug.flyRand();\r\n        } else if (mode === 'nothing') {\r\n            return;\r\n        } else if (mode === 'flyoff') {\r\n            // fly away and off the page\r\n            bug.stop();\r\n            bug.flyOff();\r\n        } else if (mode === 'die') {\r\n            // drop dead!\r\n            bug.die();\r\n        } else if (mode === 'multiply') {\r\n            if (!this.multiplyDelay && this.bugs.length < this.options.maxBugs) {\r\n                // spawn another: \r\n                // create new bug:\r\n                var b = SpawnBug(),\r\n                    options = JSON.parse(JSON.stringify(this.options)),\r\n                    pos = bug.getPos(),\r\n                    that = this;\r\n\r\n                options.wingsOpen = (this.options.canFly) ? ((Math.random() > 0.5) ? true : false) : true;\r\n                options.walkSpeed = this.random(this.options.minSpeed, this.options.maxSpeed);\r\n\r\n                b.initialize(this.transform, options);\r\n                b.drawBug(pos.top, pos.left);\r\n                // fly them both away:\r\n                if (options.canFly) {\r\n                    b.flyRand();\r\n                    bug.flyRand();\r\n                } else {\r\n                    b.go();\r\n                    bug.go();\r\n                }\r\n                // store new bug:\r\n                this.bugs.push(b);\r\n                // watch out for spawning too quickly:\r\n                this.multiplyDelay = true;\r\n                setTimeout(function() {\r\n                    // add event to this bug:\r\n                    that.add_events_to_bug(b);\r\n                    that.multiplyDelay = false;\r\n                }, this.options.minTimeBetweenMultipy);\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    random: function(min, max, round) {\r\n        if (min == max) return ((round) ? Math.round(min) : min);\r\n\r\n        var result = ((min - 0.5) + (Math.random() * (max - min + 1)));\r\n        if (result > max) {\r\n            result = max;\r\n        } else if (result < min) {\r\n            result = min;\r\n        }\r\n        return ((round) ? Math.round(result) : result);\r\n    }\r\n\r\n\r\n};\r\n\r\nvar BugController = function() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\nBugController.prototype = BugDispatch;\r\n\r\nvar SpiderController = function() {\r\n    var spiderOptions = {\r\n        imageSprite: 'spider-sprite.png',\r\n        bugWidth: 69,\r\n        bugHeight: 90,\r\n        num_frames: 7,\r\n        canFly: false,\r\n        canDie: true,\r\n        numDeathTypes: 2,\r\n        zoom: 6,\r\n        minDelay: 200,\r\n        maxDelay: 3000,\r\n        minSpeed: 6,\r\n        maxSpeed: 13,\r\n        minBugs: 3,\r\n        maxBugs: 10\r\n    };\r\n    this.options = mergeOptions(this.options, spiderOptions);\r\n    this.initialize.apply(this, arguments);\r\n\r\n}\r\nSpiderController.prototype = BugDispatch;\r\n\r\n/***************/\r\n/**    Bug    **/\r\n/***************/\r\n\r\nvar Bug = {\r\n\r\n    options: {\r\n        wingsOpen: false,\r\n        walkSpeed: 2,\r\n        flySpeed: 40,\r\n        edge_resistance: 50,\r\n        zoom: 10\r\n\r\n    },\r\n\r\n    initialize: function(transform, options) {\r\n\r\n        this.options = mergeOptions(this.options, options);\r\n\r\n        this.NEAR_TOP_EDGE = 1;\r\n        this.NEAR_BOTTOM_EDGE = 2;\r\n        this.NEAR_LEFT_EDGE = 4;\r\n        this.NEAR_RIGHT_EDGE = 8;\r\n        this.directions = {}; // 0 degrees starts on the East\r\n        this.directions[this.NEAR_TOP_EDGE] = 270;\r\n        this.directions[this.NEAR_BOTTOM_EDGE] = 90;\r\n        this.directions[this.NEAR_LEFT_EDGE] = 0;\r\n        this.directions[this.NEAR_RIGHT_EDGE] = 180;\r\n        this.directions[this.NEAR_TOP_EDGE + this.NEAR_LEFT_EDGE] = 315;\r\n        this.directions[this.NEAR_TOP_EDGE + this.NEAR_RIGHT_EDGE] = 225;\r\n        this.directions[this.NEAR_BOTTOM_EDGE + this.NEAR_LEFT_EDGE] = 45;\r\n        this.directions[this.NEAR_BOTTOM_EDGE + this.NEAR_RIGHT_EDGE] = 135;\r\n\r\n        this.angle_deg = 0;\r\n        this.angle_rad = 0;\r\n        this.large_turn_angle_deg = 0;\r\n        this.near_edge = false;\r\n        this.edge_test_counter = 10;\r\n        this.small_turn_counter = 0;\r\n        this.large_turn_counter = 0;\r\n        this.fly_counter = 0;\r\n        this.toggle_stationary_counter = Math.random() * 50;\r\n        this.zoom = this.random(this.options.zoom, 10) / 10;\r\n\r\n        this.stationary = false;\r\n        this.bug = null;\r\n        this.active = true;\r\n        this.wingsOpen = this.options.wingsOpen;\r\n        this.transform = transform;\r\n        this.walkIndex = 0;\r\n        this.flyIndex = 0;\r\n        this.alive = true;\r\n        this.twitchTimer = null;\r\n\r\n        this.rad2deg_k = 180 / Math.PI;\r\n        this.deg2rad_k = Math.PI / 180;\r\n\r\n        this.makeBug();\r\n\r\n        this.angle_rad = this.deg2rad(this.angle_deg);\r\n\r\n        this.angle_deg = this.random(0, 360, true);\r\n\r\n    },\r\n\r\n    go: function() {\r\n        if (this.transform) {\r\n            this.drawBug();\r\n            var that = this;\r\n\r\n            this.animating = true;\r\n\r\n            this.going = requestAnimFrame(function(t) {\r\n                that.animate(t);\r\n            });\r\n        }\r\n    },\r\n\r\n    stop: function() {\r\n        this.animating = false;\r\n        if (this.going) {\r\n            clearTimeout(this.going);\r\n            this.going = null;\r\n        }\r\n        if (this.flyperiodical) {\r\n            clearTimeout(this.flyperiodical);\r\n            this.flyperiodical = null;\r\n        }\r\n        if (this.twitchTimer) {\r\n            clearTimeout(this.twitchTimer);\r\n            this.twitchTimer = null;\r\n        }\r\n    },\r\n\r\n    remove: function() {\r\n    \tthis.active = false;\r\n        if (this.inserted && this.bug.parentNode) {\r\n            this.bug.parentNode.removeChild(this.bug);\r\n            this.inserted = false;\r\n        }\r\n    },\r\n\r\n    reset: function() {\r\n        this.alive = true;\r\n        this.active = true;\r\n        this.bug.style.bottom = '';\r\n        this.bug.style.top = 0;\r\n        this.bug.style.left = 0;\r\n    },\r\n\r\n    animate: function(t) {\r\n\r\n        if (!this.animating || !this.alive || !this.active) return;\r\n\r\n        var that = this;\r\n        this.going = requestAnimFrame(function(t) {\r\n            that.animate(t);\r\n        });\r\n\r\n        if (!('_lastTimestamp' in this)) this._lastTimestamp = t;\r\n\r\n        var delta = t - this._lastTimestamp;\r\n\r\n        if (delta < 40) return; // don't animate too frequently\r\n\r\n        // sometimes if the browser doesnt have focus, or the delta in request animation \r\n        // frame can be very large. We set a sensible max so that the bugs dont spaz out.\r\n\r\n        if (delta > 200) delta = 200;\r\n\r\n        this._lastTimestamp = t;\r\n\r\n        if (--this.toggle_stationary_counter <= 0) {\r\n            this.toggleStationary();\r\n        }\r\n        if (this.stationary) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (--this.edge_test_counter <= 0 && this.bug_near_window_edge()) {\r\n            // if near edge, go away from edge\r\n            this.angle_deg %= 360;\r\n            if (this.angle_deg < 0) this.angle_deg += 360;\r\n\r\n            if (Math.abs(this.directions[this.near_edge] - this.angle_deg) > 15) {\r\n                var angle1 = this.directions[this.near_edge] - this.angle_deg;\r\n                var angle2 = (360 - this.angle_deg) + this.directions[this.near_edge];\r\n                this.large_turn_angle_deg = (Math.abs(angle1) < Math.abs(angle2) ? angle1 : angle2);\r\n\r\n                this.edge_test_counter = 10;\r\n                this.large_turn_counter = 100;\r\n                this.small_turn_counter = 30;\r\n            }\r\n        }\r\n        if (--this.large_turn_counter <= 0) {\r\n            this.large_turn_angle_deg = this.random(1, this.options.maxLargeTurnDeg, true);\r\n            this.next_large_turn();\r\n        }\r\n        if (--this.small_turn_counter <= 0) {\r\n            this.angle_deg += this.random(1, this.options.maxSmallTurnDeg);\r\n            this.next_small_turn();\r\n        } else {\r\n            var dangle = this.random(1, this.options.maxWiggleDeg, true);\r\n            if ((this.large_turn_angle_deg > 0 && dangle < 0) || (this.large_turn_angle_deg < 0 && dangle > 0)) {\r\n                dangle = -dangle; // ensures both values either + or -\r\n            }\r\n            this.large_turn_angle_deg -= dangle;\r\n            this.angle_deg += dangle;\r\n        }\r\n\r\n        this.angle_rad = this.deg2rad(this.angle_deg);\r\n\r\n        var dx = Math.cos(this.angle_rad) * this.options.walkSpeed * (delta / 100);\r\n        var dy = -Math.sin(this.angle_rad) * this.options.walkSpeed * (delta / 100);\r\n\r\n        this.moveBug((this.bug.left + dx), (this.bug.top + dy), (90 - this.angle_deg));\r\n        this.walkFrame();\r\n\r\n    },\r\n\r\n    makeBug: function() {\r\n        if (!this.bug && this.active) {\r\n            var row = (this.wingsOpen) ? '0' : '-' + this.options.bugHeight + 'px',\r\n                bug = document.createElement('div');\r\n            bug.className = 'bug';\r\n            bug.style.background = 'transparent url(' + this.options.imageSprite + ') no-repeat 0 ' + row;\r\n            bug.style.width = this.options.bugWidth + 'px';\r\n            bug.style.height = this.options.bugHeight + 'px';\r\n            bug.style.position = 'fixed';\r\n            bug.style.top = 0;\r\n            bug.style.left = 0;\r\n            bug.style.zIndex = '9999999';\r\n\r\n            this.bug = bug;\r\n            this.setPos();\r\n\r\n        }\r\n\r\n    },\r\n\r\n    setPos: function(top, left) {\r\n        this.bug.top = top || this.random(this.options.edge_resistance, document.documentElement.clientHeight - this.options.edge_resistance);\r\n\r\n        this.bug.left = left || this.random(this.options.edge_resistance, document.documentElement.clientWidth - this.options.edge_resistance);\r\n\r\n        this.moveBug(this.bug.left, this.bug.top, (90 - this.angle_deg));\r\n    },\r\n\r\n    moveBug: function(x, y, deg) {\r\n        // keep track of where we are:\r\n        this.bug.left = x;\r\n        this.bug.top = y;\r\n\r\n        // transform:\r\n        var trans = \"translate(\" + parseInt(x) + \"px,\" + parseInt(y) + \"px)\";\r\n        if (deg) {\r\n            //console.log(\"translate(\"+(x)+\"px, \"+(y)+\"px) rotate(\"+deg+\"deg)\");\r\n            trans += \" rotate(\" + deg + \"deg)\";\r\n        }\r\n        trans += \" scale(\" + this.zoom + \")\";\r\n\r\n        this.transform(trans);\r\n\r\n    },\r\n\r\n    drawBug: function(top, left) {\r\n\r\n        if (!this.bug) {\r\n            this.makeBug();\r\n        }\r\n        if(!this.bug) return;\r\n\r\n        if (top && left) {\r\n            this.setPos(top, left);\r\n        } else {\r\n            this.setPos(this.bug.top, this.bug.left)\r\n        }\r\n        if (!this.inserted) {\r\n            this.inserted = true;\r\n            document.body.appendChild(this.bug);\r\n        }\r\n    },\r\n\r\n    toggleStationary: function() {\r\n        this.stationary = !this.stationary;\r\n        this.next_stationary();\r\n        var ypos = (this.wingsOpen) ? '0' : '-' + this.options.bugHeight + 'px';\r\n        if (this.stationary) {\r\n\r\n            this.bug.style.backgroundPosition = '0 ' + ypos;\r\n        } else {\r\n            this.bug.style.backgroundPosition = '-' + this.options.bugWidth + 'px ' + ypos;\r\n        }\r\n    },\r\n\r\n    walkFrame: function() {\r\n        var xpos = (-1 * (this.walkIndex * this.options.bugWidth)) + 'px',\r\n            ypos = (this.wingsOpen) ? '0' : '-' + this.options.bugHeight + 'px';\r\n        this.bug.style.backgroundPosition = xpos + ' ' + ypos;\r\n        this.walkIndex++;\r\n        if (this.walkIndex >= this.options.num_frames) this.walkIndex = 0;\r\n    },\r\n\r\n    fly: function(landingPosition) {\r\n        var currentTop = this.bug.top,\r\n            currentLeft = this.bug.left,\r\n            diffx = (currentLeft - landingPosition.left),\r\n            diffy = (currentTop - landingPosition.top),\r\n            angle = Math.atan(diffy / diffx);\r\n\r\n        if (Math.abs(diffx) + Math.abs(diffy) < 50) {\r\n            this.bug.style.backgroundPosition = (-2 * this.options.bugWidth) + 'px -' + (2 * this.options.bugHeight) + 'px';\r\n        }\r\n        if (Math.abs(diffx) + Math.abs(diffy) < 30) {\r\n            this.bug.style.backgroundPosition = (-1 * this.options.bugWidth) + 'px -' + (2 * this.options.bugHeight) + 'px';\r\n        }\r\n        if (Math.abs(diffx) + Math.abs(diffy) < 10) {\r\n            // close enough:\r\n            this.bug.style.backgroundPosition = '0 0'; //+row+'px'));\r\n\r\n            this.stop();\r\n            this.go();\r\n            //this.go.delay(100, this);\r\n\r\n            return;\r\n\r\n        }\r\n\r\n        // make it wiggle: disabled becuase its just too fast to see... better would be to make its path wiggly.\r\n        //angle = angle - (this.deg2rad(this.random(0,10)));\r\n        //console.log('angle: ',this.rad2deg(angle));\r\n\r\n        var dx = Math.cos(angle) * this.options.flySpeed,\r\n            dy = Math.sin(angle) * this.options.flySpeed;\r\n\r\n        if ((currentLeft > landingPosition.left && dx > 0) || (currentLeft > landingPosition.left && dx < 0)) {\r\n            // make sure angle is right way\r\n            dx = -1 * dx;\r\n            if (Math.abs(diffx) < Math.abs(dx)) {\r\n                dx = dx / 4;\r\n            }\r\n        }\r\n        if ((currentTop < landingPosition.top && dy < 0) || (currentTop > landingPosition.top && dy > 0)) {\r\n            dy = -1 * dy;\r\n            if (Math.abs(diffy) < Math.abs(dy)) {\r\n                dy = dy / 4;\r\n            }\r\n        }\r\n\r\n        this.moveBug((currentLeft + dx), (currentTop + dy));\r\n\r\n    },\r\n\r\n    flyRand: function() {\r\n        this.stop();\r\n        var landingPosition = {};\r\n        landingPosition.top = this.random(this.options.edge_resistance, document.documentElement.clientHeight - this.options.edge_resistance);\r\n        landingPosition.left = this.random(this.options.edge_resistance, document.documentElement.clientWidth - this.options.edge_resistance);\r\n\r\n        this.startFlying(landingPosition);\r\n    },\r\n\r\n    startFlying: function(landingPosition) {\r\n\r\n        var currentTop = this.bug.top,\r\n            currentLeft = this.bug.left,\r\n            diffx = (landingPosition.left - currentLeft),\r\n            diffy = (landingPosition.top - currentTop);\r\n\r\n        this.bug.left = landingPosition.left;\r\n        this.bug.top = landingPosition.top;\r\n\r\n        this.angle_rad = Math.atan(diffy / diffx);\r\n        this.angle_deg = this.rad2deg(this.angle_rad);\r\n\r\n        if (diffx > 0) {\r\n            // going left: quadrant 1 or 2\r\n            this.angle_deg = 90 + this.angle_deg;\r\n        } else {\r\n            // going right: quadrant 3 or 4\r\n            this.angle_deg = 270 + this.angle_deg;\r\n        }\r\n\r\n        this.moveBug(currentLeft, currentTop, this.angle_deg);\r\n\r\n        // start animation:\r\n        var that = this;\r\n        this.flyperiodical = setInterval(function() {\r\n            that.fly(landingPosition);\r\n        }, 10);\r\n    },\r\n\r\n    flyIn: function() {\r\n        if (!this.bug) {\r\n            this.makeBug();\r\n        }\r\n        \r\n        if(!this.bug) return;\r\n\r\n        this.stop();\r\n        // pick a random side:\r\n        var side = Math.round(Math.random() * 4 - 0.5),\r\n            d = document,\r\n            e = d.documentElement,\r\n            g = d.getElementsByTagName('body')[0],\r\n            windowX = window.innerWidth || e.clientWidth || g.clientWidth,\r\n            windowY = window.innerHeight || e.clientHeight || g.clientHeight;\r\n        if (side > 3) side = 3;\r\n        if (side < 0) side = 0;\r\n        var style = {},\r\n            s;\r\n        if (side === 0) {\r\n            // top:\r\n            style.top = (-2 * this.options.bugHeight);\r\n            style.left = Math.random() * windowX;\r\n        } else if (side === 1) {\r\n            // right:\r\n            style.top = Math.random() * windowY;\r\n            style.left = windowX + (2 * this.options.bugWidth);\r\n        } else if (side === 2) {\r\n            // bottom:\r\n            style.top = windowY + (2 * this.options.bugHeight);\r\n            style.left = Math.random() * windowX;\r\n        } else {\r\n            // left: \r\n            style.top = Math.random() * windowY;\r\n            style.left = (-3 * this.options.bugWidth);\r\n        }\r\n        var row = (this.wingsOpen) ? '0' : '-' + this.options.bugHeight + 'px';\r\n        this.bug.style.backgroundPosition = (-3 * this.options.bugWidth) + 'px ' + row;\r\n        this.bug.top = style.top\r\n        this.bug.left = style.left\r\n\r\n        this.drawBug();\r\n\r\n        // landing position:\r\n        var landingPosition = {};\r\n        landingPosition.top = this.random(this.options.edge_resistance, document.documentElement.clientHeight - this.options.edge_resistance);\r\n        landingPosition.left = this.random(this.options.edge_resistance, document.documentElement.clientWidth - this.options.edge_resistance);\r\n\r\n        this.startFlying(landingPosition);\r\n    },\r\n\r\n    walkIn: function() {\r\n        if (!this.bug) {\r\n            this.makeBug();\r\n        }\r\n        \r\n        if(!this.bug) return;\r\n\r\n        this.stop();\r\n        // pick a random side:\r\n        var side = Math.round(Math.random() * 4 - 0.5),\r\n            d = document,\r\n            e = d.documentElement,\r\n            g = d.getElementsByTagName('body')[0],\r\n            windowX = window.innerWidth || e.clientWidth || g.clientWidth,\r\n            windowY = window.innerHeight || e.clientHeight || g.clientHeight;\r\n        if (side > 3) side = 3;\r\n        if (side < 0) side = 0;\r\n        var style = {},\r\n            s;\r\n        if (side === 0) {\r\n            // top:\r\n            style.top = (-1.3 * this.options.bugHeight);\r\n            style.left = Math.random() * windowX;\r\n        } else if (side === 1) {\r\n            // right:\r\n            style.top = Math.random() * windowY;\r\n            style.left = windowX + (0.3 * this.options.bugWidth);\r\n        } else if (side === 2) {\r\n            // bottom:\r\n            style.top = windowY + (0.3 * this.options.bugHeight);\r\n            style.left = Math.random() * windowX;\r\n        } else {\r\n            // left: \r\n            style.top = Math.random() * windowY;\r\n            style.left = (-1.3 * this.options.bugWidth);\r\n        }\r\n        var row = (this.wingsOpen) ? '0' : '-' + this.options.bugHeight + 'px';\r\n        this.bug.style.backgroundPosition = (-3 * this.options.bugWidth) + 'px ' + row;\r\n        this.bug.top = style.top\r\n        this.bug.left = style.left\r\n\r\n        this.drawBug();\r\n\r\n        // start walking:\r\n        this.go();\r\n\r\n    },\r\n\r\n    flyOff: function() {\r\n        this.stop();\r\n        // pick a random side to fly off to, where 0 is top and continuing clockwise.\r\n        var side = this.random(0, 3),\r\n            style = {},\r\n            d = document,\r\n            e = d.documentElement,\r\n            g = d.getElementsByTagName('body')[0],\r\n            windowX = window.innerWidth || e.clientWidth || g.clientWidth,\r\n            windowY = window.innerHeight || e.clientHeight || g.clientHeight;\r\n\r\n        if (side === 0) {\r\n            // top:\r\n            style.top = -200;\r\n            style.left = Math.random() * windowX;\r\n        } else if (side === 1) {\r\n            // right:\r\n            style.top = Math.random() * windowY;\r\n            style.left = windowX + 200;\r\n        } else if (side === 2) {\r\n            //bottom:\r\n            style.top = windowY + 200;\r\n            style.left = Math.random() * windowX;\r\n        } else {\r\n            // left: \r\n            style.top = Math.random() * windowY;\r\n            style.left = -200;\r\n        }\r\n        this.startFlying(style);\r\n    },\r\n\r\n    die: function() {\r\n        this.stop();\r\n        //pick death style:\r\n        var deathType = this.random(0, this.options.numDeathTypes - 1);\r\n\r\n        this.alive = false;\r\n        this.drop(deathType);\r\n    },\r\n\r\n    drop: function(deathType) {\r\n        var startPos = this.bug.top,\r\n            d = document,\r\n            e = d.documentElement,\r\n            g = d.getElementsByTagName('body')[0],\r\n            finalPos = window.innerHeight || e.clientHeight || g.clientHeight,\r\n            finalPos = finalPos - this.options.bugHeight,\r\n            rotationRate = this.random(0, 20, true),\r\n            startTime = Date.now(),\r\n            that = this;\r\n\r\n        this.dropTimer = requestAnimFrame(function(t) {\r\n            that._lastTimestamp = t;\r\n            that.dropping(t, startPos, finalPos, rotationRate, deathType);\r\n        });\r\n\r\n    },\r\n\r\n    dropping: function(t, startPos, finalPos, rotationRate, deathType) {\r\n        var elapsedTime = t - this._lastTimestamp,\r\n            deltaPos = (0.002 * (elapsedTime * elapsedTime)),\r\n            newPos = startPos + deltaPos;\r\n        //console.log(t, elapsedTime, deltaPos, newPos);\r\n\r\n        var that = this;\r\n\r\n\r\n        if (newPos >= finalPos) {\r\n            newPos = finalPos;\r\n            clearTimeout(this.dropTimer);\r\n\r\n\r\n\r\n            this.angle_deg = 0;\r\n            this.angle_rad = this.deg2rad(this.angle_deg);\r\n            this.transform(\"rotate(\" + (90 - this.angle_deg) + \"deg) scale(\" + this.zoom + \")\");\r\n            this.bug.style.top = null;\r\n            // because it is (or might be) zoomed and rotated, we cannot just just bottom = 0. Figure out real bottom position:\r\n            var rotationOffset = ((this.options.bugWidth * this.zoom) - (this.options.bugHeight * this.zoom)) / 2;\r\n            var zoomOffset = ((this.options.bugHeight) / 2) * (1 - this.zoom);\r\n            this.bug.style.bottom = Math.ceil((rotationOffset - zoomOffset)) + 'px'; // because its rotated and zoomed.\r\n            this.bug.style.left = this.bug.left + 'px';\r\n            this.bug.style.backgroundPosition = '-' + ((deathType * 2) * this.options.bugWidth) + 'px 100%';\r\n\r\n\r\n            this.twitch(deathType);\r\n\r\n            return;\r\n        }\r\n\r\n        this.dropTimer = requestAnimFrame(function(t) {\r\n            that.dropping(t, startPos, finalPos, rotationRate, deathType);\r\n        });\r\n\r\n        if (elapsedTime < 20) return;\r\n\r\n        this.angle_deg = ((this.angle_deg + rotationRate) % 360);\r\n        this.angle_rad = this.deg2rad(this.angle_deg);\r\n\r\n        this.moveBug(this.bug.left, newPos, this.angle_deg);\r\n    },\r\n\r\n    twitch: function(deathType, legPos) {\r\n        //this.bug.style.back\r\n        if (!legPos) legPos = 0;\r\n        var that = this;\r\n        if (deathType === 0 || deathType === 1) {\r\n            that.twitchTimer = setTimeout(function() {\r\n                that.bug.style.backgroundPosition = '-' + ((deathType * 2 + (legPos % 2)) * that.options.bugWidth) + 'px 100%';\r\n                that.twitchTimer = setTimeout(function() {\r\n                    legPos++;\r\n                    that.bug.style.backgroundPosition = '-' + ((deathType * 2 + (legPos % 2)) * that.options.bugWidth) + 'px 100%';\r\n                    that.twitch(deathType, ++legPos);\r\n                }, that.random(300, 800));\r\n            }, this.random(1000, 10000));\r\n        }\r\n    },\r\n\r\n    /* helper methods: */\r\n    rad2deg: function(rad) {\r\n        return rad * this.rad2deg_k;\r\n    },\r\n    deg2rad: function(deg) {\r\n        return deg * this.deg2rad_k;\r\n    },\r\n    random: function(min, max, plusminus) {\r\n        if (min == max) return min;\r\n        var result = Math.round(min - 0.5 + (Math.random() * (max - min + 1)));\r\n        if (plusminus) return Math.random() > 0.5 ? result : -result;\r\n        return result;\r\n    },\r\n\r\n    next_small_turn: function() {\r\n        this.small_turn_counter = Math.round(Math.random() * 10);\r\n    },\r\n    next_large_turn: function() {\r\n        this.large_turn_counter = Math.round(Math.random() * 40);\r\n    },\r\n    next_stationary: function() {\r\n        this.toggle_stationary_counter = this.random(50, 300);\r\n    },\r\n\r\n    bug_near_window_edge: function() {\r\n        this.near_edge = 0;\r\n        if (this.bug.top < this.options.edge_resistance)\r\n            this.near_edge |= this.NEAR_TOP_EDGE;\r\n        else if (this.bug.top > document.documentElement.clientHeight - this.options.edge_resistance)\r\n            this.near_edge |= this.NEAR_BOTTOM_EDGE;\r\n        if (this.bug.left < this.options.edge_resistance)\r\n            this.near_edge |= this.NEAR_LEFT_EDGE;\r\n        else if (this.bug.left > document.documentElement.clientWidth - this.options.edge_resistance)\r\n            this.near_edge |= this.NEAR_RIGHT_EDGE;\r\n        return this.near_edge;\r\n    },\r\n\r\n    getPos: function() {\r\n        if (this.inserted && this.bug && this.bug.style) {\r\n            return {\r\n                'top': parseInt(this.bug.top, 10),\r\n                'left': parseInt(this.bug.left, 10)\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n\r\n};\r\n\r\nvar SpawnBug = function() {\r\n    var newBug = {},\r\n        prop;\r\n    for (prop in Bug) {\r\n        if (Bug.hasOwnProperty(prop)) {\r\n            newBug[prop] = Bug[prop];\r\n        }\r\n    }\r\n    return newBug;\r\n};\r\n\r\n// debated about which pattern to use to instantiate each bug...\r\n// see http://jsperf.com/obj-vs-prototype-vs-other\r\n\r\n\r\n\r\n/**\r\n * Helper methods:\r\n **/\r\n\r\nvar mergeOptions = function(obj1, obj2, clone) {\r\n    if (typeof(clone) == 'undefined') {\r\n        clone = true;\r\n    }\r\n    var newobj = (clone) ? cloneOf(obj1) : obj1;\r\n    for (var key in obj2) {\r\n        if (obj2.hasOwnProperty(key)) {\r\n            newobj[key] = obj2[key];\r\n        }\r\n    }\r\n    return newobj;\r\n};\r\n\r\nvar cloneOf = function(obj) {\r\n    if (obj == null || typeof(obj) != 'object')\r\n        return obj;\r\n\r\n    var temp = obj.constructor(); // changed\r\n\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            temp[key] = cloneOf(obj[key]);\r\n        }\r\n    }\r\n    return temp;\r\n}\r\n\r\n/* Request animation frame polyfill */\r\n/* http://paulirish.com/2011/requestanimationframe-for-smart-animating/ */\r\nwindow.requestAnimFrame = (function() {\r\n    return window.requestAnimationFrame ||\r\n        window.webkitRequestAnimationFrame ||\r\n        window.mozRequestAnimationFrame ||\r\n        window.oRequestAnimationFrame ||\r\n        window.msRequestAnimationFrame || function( /* function */ callback, /* DOMElement */ element) {\r\n            window.setTimeout(callback, 1000 / 60);\r\n        };\r\n})();\r\n"],"sourceRoot":"/source/"}